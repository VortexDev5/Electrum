name: Create 10 Custom Issues

on:
  workflow_dispatch:

permissions:
  issues: write

jobs:
  post_issues:
    runs-on: ubuntu-latest

    steps:
      - name: Post 10 Customized Issues with Metadata
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issues = [
              { title: "üêõ Bug: Login broken", body: "Login fails on mobile.", labels: ["bug", "urgent"] },
              { title: "üé® UI: Improve footer", body: "Footer is misaligned on small screens.", labels: ["enhancement", "design"] },
              { title: "üöÄ Feature: Dark mode", body: "Add toggle for dark/light theme.", labels: ["feature", "frontend"] },
              { title: "üì¶ Dependency: React 18", body: "Update to React 18 safely.", labels: ["update"] },
              { title: "üõ†Ô∏è Refactor: Auth logic", body: "Split logic for better readability.", labels: ["refactor"] },
              { title: "üß™ Tests: Signup flow", body: "Write unit tests for sign-up.", labels: ["test"] },
              { title: "üìù Docs: Setup guide", body: "Add dev setup steps to README.", labels: ["documentation"] },
              { title: "üîí Security: Rate limit", body: "Protect login from brute-force.", labels: ["security"] },
              { title: "üåê i18n: Add Spanish", body: "Translate UI to Spanish.", labels: ["localization"] },
              { title: "üìä Analytics: Clicks", body: "Track CTA button clicks.", labels: ["analytics"] }
            ];

            const milestoneTitle = "v1.0";
            const assignees = ["your-username"]; // üëà change to your GitHub username

            // Get milestone ID from title
            const { data: milestones } = await github.rest.issues.listMilestones({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const milestone = milestones.find(m => m.title === milestoneTitle);

            if (!milestone) {
              throw new Error(`‚ùå Milestone '${milestoneTitle}' not found.`);
            }

            for (const issue of issues) {
              const response = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issue.title,
                body: issue.body,
                labels: issue.labels,
                assignees,
                milestone: milestone.number
              });

              console.log(`‚úÖ Created: ${response.data.title} ‚Äî ${response.data.html_url}`);
            }
